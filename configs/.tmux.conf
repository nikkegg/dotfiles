# -@close_status_id_to_db_status_id_dict[new_status_id]----------------------------------------------------------------------------
# This config is targeted for tmux 3.0+.
#
# Read the "Plugin Manager" section (bottom) before trying to use this config!
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Global options
# -----------------------------------------------------------------------------

# Set a new prefix / leader key.
set-option -g prefix C-a
bind-key C-a send-prefix

# Allow opening multiple terminals to view the same session at different sizes.
setw -g aggressive-resize on

# Remove delay when switching between Vim modes.
set -sg escape-time 0

# Allow Vim's FocusGained to work when your terminal gains focus.
set -g focus-events on

# Add a bit more scroll history in the buffer.
set-option -g history-limit 250000
set-option -g default-shell /bin/zsh

# Enable color support inside of tmux.
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Send xterm compatible control arrow keys so they work with Vim.
setw -g xterm-keys on

# Ensure window titles dont get renamed automatically.
set-window-option -g allow-rename off
set-window-option -g automatic-rename off
# Ensure window index numbers get reordered on delete.
set-option -g renumber-windows on
# Start windows and panes index at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# set update frequency (default 15 seconds), helpful for dynamic things on statusline
set -g status-interval 5

# Enable full mouse support.
set -g mouse on

# Status line
set -g status-position bottom
set -g status-justify left
# Colour of the border between panes
setw -g pane-border-style fg=green

# Active pane normal, other shaded out
setw -g window-active-style fg=white,bg=black
setw -g window-style fg=colour240,bg=colour233

#Left status: change colour of the session name if prefix is active
set-option -g status-left "\
#[fg=colour7, bg=colour241]#{?client_prefix,#[bg=colour141],} ‚ùê #S \
#[fg=colour241, bg=colour237]#{?client_prefix,#[fg=colour142],}ÓÇ∞"

#Right status: show time, date and magnifying glass icon if window is zooomed in
set-option -g status-right "\
#{?window_zoomed_flag,üîç ,}\
#[fg=colour247] ÓÇ≥ %b %d '%y\
#[fg=colour109] ÓÇ≥ %H:%M \
#[fg=colour248]"

# Formatting for active window tab
set-window-option -g window-status-current-format "\
#[fg=colour237, bg=green]ÓÇ∞\
#[fg=colour239, bg=green, bold] #I* #W \
#[fg=green, bg=colour237]ÓÇ∞"

# Formatting for other tabs
set-window-option -g window-status-format "\
#[fg=colour237,bg=colour239]ÓÇ∞\
#[fg=colour223,bg=colour239] #I #W \
#[fg=colour239, bg=colour237]ÓÇ∞"

set-window-option -g window-status-separator ''


# A quiter setup
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# -----------------------------------------------------------------------------
# Key bindings
# -----------------------------------------------------------------------------

# Unbind default keys
unbind C-b
unbind '"'
unbind %

# Reload the tmux config.
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Split panes in current directory
bind c new-window -c "#{pane_current_path}"
bind-key b split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# window navigation
bind-key , previous-window
bind-key / next-window

# vi is good
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Copy to system clipboard (macOS)
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy -in -selection clipboard'

 # Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# -----------------------------------------------------------------------------
# Plugin Manager - https://github.com/tmux-plugins/tpm
# If you didn't use my dotfiles install script you'll need to:
#   Step 1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   Step 2) Reload tmux if it's already started with `r
#   Step 3) Launch tmux and hit `I (capital i) to fetch any plugins
# -----------------------------------------------------------------------------

# List of plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TPM (keep this line at the very bottom of your tmux.conf).
#run -b '~/.tmux/plugins/tpm/tpm'
